name: Deploy to VPS

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: Add SSH Known Hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to VPS
        env:
          SSH_HOST: ${{ secrets.VPS_HOST }}
          SSH_USERNAME: ${{ secrets.VPS_USERNAME }}
          VPS_PORT: ${{ secrets.VPS_PORT }}
        run: |
          ssh -p $VPS_PORT $SSH_USERNAME@$SSH_HOST bash -s << 'ENDSSH'
            set -ex
            
            # Navigate to project directory
            cd /home/sipengaduan
            
            # Fix Git ownership issue
            git config --global --add safe.directory /home/sipengaduan
            
            # Pull latest changes (force pull)
            git fetch --all
            git reset --hard origin/main
            
            # Update .env with production values
            cat > .env << 'EOF'
            ${{ secrets.PRODUCTION_ENV }}
            EOF
            
            # Stop existing containers
            docker compose -f docker-compose.prod.yml down || true
            
            # Clean up old images and containers
            docker system prune -f
            
            # Build and start production containers
            docker compose -f docker-compose.prod.yml build --no-cache
            docker compose -f docker-compose.prod.yml up -d
            
            # Wait for application container to be ready
            echo "Waiting for application to be ready..."
            until docker exec sipengaduan-app php -v > /dev/null 2>&1; do
              echo "Waiting for app container..."
              sleep 5
            done
            
            # Run Laravel setup commands
            docker exec sipengaduan-app php artisan key:generate --force
            docker exec sipengaduan-app php artisan migrate --force
            docker exec sipengaduan-app php artisan config:cache
            docker exec sipengaduan-app php artisan route:cache
            docker exec sipengaduan-app php artisan view:cache
            
            # Create storage symbolic link
            docker exec sipengaduan-app php artisan storage:link
            
            # Set proper permissions
            docker exec sipengaduan-app chown -R sipengaduan:www-data /var/www/html/storage
            docker exec sipengaduan-app chown -R sipengaduan:www-data /var/www/html/bootstrap/cache
            docker exec sipengaduan-app chmod -R 775 /var/www/html/storage
            docker exec sipengaduan-app chmod -R 775 /var/www/html/bootstrap/cache
            
            # Restart services to apply all changes
            docker compose -f docker-compose.prod.yml restart
            
            echo "âœ… Production deployment completed successfully!"
          ENDSSH
