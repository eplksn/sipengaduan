name: Deploy to VPS

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: Add SSH Known Hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to VPS
        env:
          SSH_HOST: ${{ secrets.VPS_HOST }}
          SSH_USERNAME: ${{ secrets.VPS_USERNAME }}
          VPS_PORT: ${{ secrets.VPS_PORT }}
        run: |
          ssh -p $VPS_PORT $SSH_USERNAME@$SSH_HOST bash -s << 'ENDSSH'
            set -ex
            
            # Navigate to project directory
            cd /home/sipengaduan
            
            # Fix Git ownership issue
            git config --global --add safe.directory /home/sipengaduan
            
            # Pull latest changes (force pull)
            git fetch --all
            git reset --hard origin/main
            
            # Update .env with production values
            echo "${{ secrets.PRODUCTION_ENV }}" > .env
            
            # Bring down existing containers
            docker compose down || true
            
            # Clean up old images, containers, and volumes
            docker system prune -af
            
            # Build Laravel Sail image if needed
            docker compose build laravel.test
            
            # Start containers
            docker compose up -d
            
            # Wait for containers to be healthy
            echo "Waiting for containers to be ready..."
            until docker compose exec -T laravel.test php --version > /dev/null 2>&1; do
              echo "Waiting for Laravel container..."
              sleep 2
            done
            
            # Install/update PHP dependencies
            docker compose exec -T laravel.test composer install --no-dev --optimize-autoloader
            
            # Install Node.js dependencies and build assets
            docker compose exec -T laravel.test npm install
            docker compose exec -T laravel.test npm run build

            # Run Laravel optimizations (includes config:cache, route:cache, view:cache)
            docker compose exec -T laravel.test php artisan optimize
            
            echo "âœ… Deployment completed successfully!"
          ENDSSH
